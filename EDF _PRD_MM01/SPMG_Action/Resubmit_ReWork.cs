///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace EDF__PRD_MM01.SPMG_Action
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Resubmit_ReWork recording.
    /// </summary>
    [TestModule("b1fda6cb-ab28-4608-adad-fc1abc5bae31", ModuleType.Recording, 1)]
    public partial class Resubmit_ReWork : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::EDF__PRD_MM01.S2022_PRD_MM01_NON_DUPRepository repository.
        /// </summary>
        public static global::EDF__PRD_MM01.S2022_PRD_MM01_NON_DUPRepository repo = global::EDF__PRD_MM01.S2022_PRD_MM01_NON_DUPRepository.Instance;

        static Resubmit_ReWork instance = new Resubmit_ReWork();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Resubmit_ReWork()
        {
            varCRNumber = "";
            varComment_Submit = "";
            CR_Number = "";
            CR_numberWithMessage = "";
            CR_Number_ORG = "";
            varRequestDes = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Resubmit_ReWork Instance
        {
            get { return instance; }
        }

#region Variables

        string _varComment_Submit;

        /// <summary>
        /// Gets or sets the value of variable varComment_Submit.
        /// </summary>
        [TestVariable("0bbf6fbc-5e47-461a-b35f-77a6669cd51f")]
        public string varComment_Submit
        {
            get { return _varComment_Submit; }
            set { _varComment_Submit = value; }
        }

        string _CR_Number;

        /// <summary>
        /// Gets or sets the value of variable CR_Number.
        /// </summary>
        [TestVariable("b29c1c35-61b9-4118-b248-9982d5285e14")]
        public string CR_Number
        {
            get { return _CR_Number; }
            set { _CR_Number = value; }
        }

        string _CR_numberWithMessage;

        /// <summary>
        /// Gets or sets the value of variable CR_numberWithMessage.
        /// </summary>
        [TestVariable("a0fc4276-782a-4fcd-87ce-7d4f4f4ccaeb")]
        public string CR_numberWithMessage
        {
            get { return _CR_numberWithMessage; }
            set { _CR_numberWithMessage = value; }
        }

        string _CR_Number_ORG;

        /// <summary>
        /// Gets or sets the value of variable CR_Number_ORG.
        /// </summary>
        [TestVariable("93828d4f-37f9-42dd-bb01-df39de047f4d")]
        public string CR_Number_ORG
        {
            get { return _CR_Number_ORG; }
            set { _CR_Number_ORG = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable varCRNumber.
        /// </summary>
        [TestVariable("579d1405-9380-48eb-9911-8fb3ffd568bd")]
        public string varCRNumber
        {
            get { return repo.varCRNumber; }
            set { repo.varCRNumber = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable varRequestDes.
        /// </summary>
        [TestVariable("446ab746-29e7-4358-97fb-78d35b62c7b2")]
        public string varRequestDes
        {
            get { return repo.varRequestDes; }
            set { repo.varRequestDes = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'SimpleMDG.Copy_CR.txt_Search_CR'", repo.SimpleMDG.Copy_CR.txt_Search_CRInfo, new ActionTimeout(5000), new RecordItemIndex(0));
            repo.SimpleMDG.Copy_CR.txt_Search_CRInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SimpleMDG.Copy_CR.txt_Search_CR' at Center.", repo.SimpleMDG.Copy_CR.txt_Search_CRInfo, new RecordItemIndex(1));
            repo.SimpleMDG.Copy_CR.txt_Search_CR.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(2));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}' with focus on 'SimpleMDG.Copy_CR.txt_Search_CR'.", repo.SimpleMDG.Copy_CR.txt_Search_CRInfo, new RecordItemIndex(3));
            repo.SimpleMDG.Copy_CR.txt_Search_CR.PressKeys("{LControlKey down}{Akey}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(4));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varCRNumber' with focus on 'SimpleMDG.Copy_CR.txt_Search_CR'.", repo.SimpleMDG.Copy_CR.txt_Search_CRInfo, new RecordItemIndex(5));
            repo.SimpleMDG.Copy_CR.txt_Search_CR.PressKeys(varCRNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SimpleMDG.Copy_CR.btn_Search_CR_Action' at Center.", repo.SimpleMDG.Copy_CR.btn_Search_CR_ActionInfo, new RecordItemIndex(6));
            repo.SimpleMDG.Copy_CR.btn_Search_CR_Action.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(7));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'SimpleMDG.Copy_CR.lb_Status_REWORKED'", repo.SimpleMDG.Copy_CR.lb_Status_REWORKEDInfo, new ActionTimeout(10000), new RecordItemIndex(8));
            repo.SimpleMDG.Copy_CR.lb_Status_REWORKEDInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SimpleMDG.Copy_CR.lb_Select_CR' at Center.", repo.SimpleMDG.Copy_CR.lb_Select_CRInfo, new RecordItemIndex(9));
            repo.SimpleMDG.Copy_CR.lb_Select_CR.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(10));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SimpleMDG.Copy_CR.btn_Edit_Request' at Center.", repo.SimpleMDG.Copy_CR.btn_Edit_RequestInfo, new RecordItemIndex(11));
            repo.SimpleMDG.Copy_CR.btn_Edit_Request.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(12));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 20s to exist. Associated repository item: 'SimpleMDG.Header.txt_Description'", repo.SimpleMDG.Header.txt_DescriptionInfo, new ActionTimeout(20000), new RecordItemIndex(13));
            repo.SimpleMDG.Header.txt_DescriptionInfo.WaitForExists(20000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SimpleMDG.Header.txt_Description' at Center.", repo.SimpleMDG.Header.txt_DescriptionInfo, new RecordItemIndex(14));
            repo.SimpleMDG.Header.txt_Description.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}' with focus on 'SimpleMDG.Header.txt_Description'.", repo.SimpleMDG.Header.txt_DescriptionInfo, new RecordItemIndex(15));
            repo.SimpleMDG.Header.txt_Description.PressKeys("{LControlKey down}{Akey}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(16));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varRequestDes' with focus on 'SimpleMDG.Header.txt_Description'.", repo.SimpleMDG.Header.txt_DescriptionInfo, new RecordItemIndex(17));
            repo.SimpleMDG.Header.txt_Description.PressKeys(varRequestDes);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SimpleMDG.Submit_CR.btn_SubmitCR' at Center.", repo.SimpleMDG.Submit_CR.btn_SubmitCRInfo, new RecordItemIndex(18));
            repo.SimpleMDG.Submit_CR.btn_SubmitCR.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(19));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$varComment_Submit' with focus on 'SimpleMDG.Submit_CR.txt_Comment_Submit'.", repo.SimpleMDG.Submit_CR.txt_Comment_SubmitInfo, new RecordItemIndex(20));
            repo.SimpleMDG.Submit_CR.txt_Comment_Submit.PressKeys(varComment_Submit);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SimpleMDG.Submit_CR.btn_Submit_Confirm' at Center.", repo.SimpleMDG.Submit_CR.btn_Submit_ConfirmInfo, new RecordItemIndex(21));
            repo.SimpleMDG.Submit_CR.btn_Submit_Confirm.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(22));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SimpleMDG.Submit_CR.btn_OK' at Center.", repo.SimpleMDG.Submit_CR.btn_OKInfo, new RecordItemIndex(23));
            repo.SimpleMDG.Submit_CR.btn_OK.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(24));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 20s to exist. Associated repository item: 'SimpleMDG.Copy_CR.txt_Search_CR'", repo.SimpleMDG.Copy_CR.txt_Search_CRInfo, new ActionTimeout(20000), new RecordItemIndex(25));
            repo.SimpleMDG.Copy_CR.txt_Search_CRInfo.WaitForExists(20000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SimpleMDG.Copy_CR.txt_Search_CR' at Center.", repo.SimpleMDG.Copy_CR.txt_Search_CRInfo, new RecordItemIndex(26));
            repo.SimpleMDG.Copy_CR.txt_Search_CR.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(27));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{LControlKey down}{Akey}{LControlKey up}' with focus on 'SimpleMDG.Copy_CR.txt_Search_CR'.", repo.SimpleMDG.Copy_CR.txt_Search_CRInfo, new RecordItemIndex(28));
            repo.SimpleMDG.Copy_CR.txt_Search_CR.PressKeys("{LControlKey down}{Akey}{LControlKey up}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(29));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$CR_Number' with focus on 'SimpleMDG.Copy_CR.txt_Search_CR'.", repo.SimpleMDG.Copy_CR.txt_Search_CRInfo, new RecordItemIndex(30));
            repo.SimpleMDG.Copy_CR.txt_Search_CR.PressKeys(CR_Number);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SimpleMDG.Copy_CR.btn_Search_CR_Action' at Center.", repo.SimpleMDG.Copy_CR.btn_Search_CR_ActionInfo, new RecordItemIndex(31));
            repo.SimpleMDG.Copy_CR.btn_Search_CR_Action.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(32));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'SimpleMDG.Copy_CR.btn_Requestor_Status_DUPLICATE'", repo.SimpleMDG.Copy_CR.btn_Requestor_Status_DUPLICATEInfo, new ActionTimeout(10000), new RecordItemIndex(33));
            repo.SimpleMDG.Copy_CR.btn_Requestor_Status_DUPLICATEInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='DUPLICATE') on item 'SimpleMDG.Copy_CR.btn_Requestor_Status_DUPLICATE'.", repo.SimpleMDG.Copy_CR.btn_Requestor_Status_DUPLICATEInfo, new RecordItemIndex(34));
            Validate.AttributeEqual(repo.SimpleMDG.Copy_CR.btn_Requestor_Status_DUPLICATEInfo, "InnerText", "DUPLICATE");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SimpleMDG.Copy_CR.btn_Requestor_Status_DUPLICATE' at Center.", repo.SimpleMDG.Copy_CR.btn_Requestor_Status_DUPLICATEInfo, new RecordItemIndex(35));
            repo.SimpleMDG.Copy_CR.btn_Requestor_Status_DUPLICATE.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Error Log') on item 'SimpleMDG.Validation_Status.lb_Error_Log'.", repo.SimpleMDG.Validation_Status.lb_Error_LogInfo, new RecordItemIndex(36));
            Validate.AttributeEqual(repo.SimpleMDG.Validation_Status.lb_Error_LogInfo, "InnerText", "Error Log");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (tagvalue>'Duplication found for below Product') on item 'SimpleMDG.Validation_Status.txt_Duplication_Error_Mgs'.", repo.SimpleMDG.Validation_Status.txt_Duplication_Error_MgsInfo, new RecordItemIndex(37));
            Validate.AttributeContains(repo.SimpleMDG.Validation_Status.txt_Duplication_Error_MgsInfo, "tagvalue", "Duplication found for below Product");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (tagvalue>'In Request') on item 'SimpleMDG.Validation_Status.txt_Duplication_Error_Mgs'.", repo.SimpleMDG.Validation_Status.txt_Duplication_Error_MgsInfo, new RecordItemIndex(38));
            Validate.AttributeContains(repo.SimpleMDG.Validation_Status.txt_Duplication_Error_MgsInfo, "tagvalue", "In Request");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (tagvalue>'Please check for below duplicate config') on item 'SimpleMDG.Validation_Status.txt_Duplication_Error_Mgs'.", repo.SimpleMDG.Validation_Status.txt_Duplication_Error_MgsInfo, new RecordItemIndex(39));
            Validate.AttributeContains(repo.SimpleMDG.Validation_Status.txt_Duplication_Error_MgsInfo, "tagvalue", "Please check for below duplicate config");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SimpleMDG.Validation_Status.btn_Close_Error_Mgs' at Center.", repo.SimpleMDG.Validation_Status.btn_Close_Error_MgsInfo, new RecordItemIndex(40));
            repo.SimpleMDG.Validation_Status.btn_Close_Error_Mgs.Click();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
